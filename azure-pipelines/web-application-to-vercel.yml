#####
#
# Deploy Web Application to Vercel
# Use for: static sites, create react app, react, next
# Handles preview and production deployments by checking if the branch is 'main'
#
# Pre-requisites
# Private variables for your VERCEL_TOKEN and the VERCEL_ORG_ID, VERCEL_PROJECT_ID
#
# Useful reading: https://vercel.com/guides/how-can-i-use-github-actions-with-vercel
# @eddlondon/recipes
#
#####

pool:
  vmImage: ubuntu-latest

jobs:
- job: A
  displayName: Deploy preview
  condition: ne(variables['Build.SourceBranch'], 'refs/heads/main')
  steps:
  - checkout: self
    submodules: "true"

  - task: Bash@3
    displayName: 'Install Vercel CLI'
    inputs:
      targetType: inline
      script: npm install --global vercel

  - task: Bash@3
    displayName: 'Pull Vercel Environment Information'
    inputs:
      targetType: inline
      script: vercel pull --yes --environment=preview --token=$(VERCEL_TOKEN)
    env:
      VERCEL_TOKEN: $(VERCEL_TOKEN)
      VERCEL_ORG_ID: $(VERCEL_ORG_ID)
      VERCEL_PROJECT_ID: $(VERCEL_PROJECT_ID)

  - task: Bash@3
    displayName: 'Build Project Artifacts'
    inputs:
      targetType: inline
      script: vercel build --token=$(VERCEL_TOKEN)

  - task: Bash@3
    displayName: 'Deploy Project Artifacts to Vercel'
    inputs:
      targetType: inline
      script: vercel deploy --prebuilt  --token=$(VERCEL_TOKEN)

- job: B
  displayName: Deploy production
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  steps:
  - checkout: self
    submodules: "true"

  - task: Bash@3
    displayName: 'Install Vercel CLI'
    inputs:
      targetType: inline
      script: npm install --global vercel

  - task: Bash@3
    displayName: 'Pull Vercel Environment Information'
    inputs:
      targetType: inline
      script: vercel pull --yes --environment=production --token=$(VERCEL_TOKEN)
    env:
      VERCEL_TOKEN: $(VERCEL_TOKEN)
      VERCEL_ORG_ID: $(VERCEL_ORG_ID)
      VERCEL_PROJECT_ID: $(VERCEL_PROJECT_ID)

  - task: Bash@3
    displayName: 'Build Project Artifacts'
    inputs:
      targetType: inline
      script: vercel build --prod --token=$(VERCEL_TOKEN)

  - task: Bash@3
    displayName: 'Deploy Project Artifacts to Vercel'
    inputs:
      targetType: inline
      script: vercel deploy --prebuilt --prod --token=$(VERCEL_TOKEN)
